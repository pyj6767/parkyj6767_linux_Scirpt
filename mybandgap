#!/usr/bin/env python
#Scripte Name : mybandgap | Young-Jun Park, yjpark29@postech.ac.kr
#Description
#: Bandgap Calculation

import sys
import os
import math

pwd=os.getcwd()
ps=pwd.split('/')
ps.reverse()

EIGENVALfile = open(pwd+'/EIGENVAL','r')
linedata=EIGENVALfile.readlines()
coordinates=linedata[7:]

coordi=[]
for i in range(len(coordinates)):
    coordinates[i]=coordinates[i].replace('\n','').replace('\r','')
    coordi.append(coordinates[i].split(' '))

for j in range(len(coordi)):
    coordi[j] = [k for k in coordi[j] if k != '']

for p in range(len(coordi)):
    if len(coordi[p])>3: #TTT, FFF 까지 있는 데이터라면, 앞부분만 자르기
        coordi[p]=coordi[p]

for y in range(len(coordi)):
    coordi[y] = [float(u) for u in coordi[y]]
    
#print(coordi)

kpt_list=[]
total_energy_list=[]
energy_list=[]

for i in range(len(coordi)):
    if i>3 and len(coordi[i-1])==4 and len(coordi[i])==5:
        total_energy_list.append(energy_list)
        energy_list=[]
    if len(coordi[i])==4:
        kpt_list.append(coordi[i])
    elif len(coordi[i])==5:
        energy_list.append(coordi[i])
    if i==len(coordi)-1:
        total_energy_list.append(energy_list)

        
vbm_list=[]
defect_level_list=[]
cbm_list=[]
for i in range(len(total_energy_list)):
    defect_level=[]
    for j in range(len(total_energy_list[i])):
        if j>2:
            if ( float(total_energy_list[i][j-1][3])==1.0 and float(total_energy_list[i][j][3])!=1.0 ) or ( float(total_energy_list[i][j-1][4])==1.0 and float(total_energy_list[i][j][4])!=1.0 ):
                vbm_list.append(total_energy_list[i][j-1])

            if ( float(total_energy_list[i][j][3])!=round(float(total_energy_list[i][j][3])) ) or ( float(total_energy_list[i][j][4])!=round(float(total_energy_list[i][j][4])) ):
                defect_level.append(total_energy_list[i][j])

            if ( float(total_energy_list[i][j-1][3])!=0.0 and float(total_energy_list[i][j][3])==0.0 ) or ( float(total_energy_list[i][j-1][4])!=0.0 and float(total_energy_list[i][j][4])==0.0 ):
                cbm_list.append(total_energy_list[i][j])
                print(i,j)
    defect_level_list.append(defect_level)


for i in range(len(kpt_list)):
    print('KPT : {} {} {} {}'.format(kpt_list[i][0],kpt_list[i][1],kpt_list[i][2], kpt_list[i][3]))
    print('-----------------------------------------------------------------------------------------------')
    print('cbm               = Energy : {} | {} | Occupancy : {} {} '.format(cbm_list[i][1],cbm_list[i][2],cbm_list[i][3],cbm_list[i][4]))
    for d in range(len(defect_level_list[i])):
        print('defect_level_list = Energy : {} | {} | Occupancy : {} {} '.format(defect_level_list[i][d][1], defect_level_list[i][d][2], defect_level_list[i][d][3], defect_level_list[i][d][4]))
    print('vbm               = Energy : {} | {} | Occupancy : {} {} '.format(vbm_list[i][1], vbm_list[i][2], vbm_list[i][3], vbm_list[i][4]))
    print('-----------------------------------------------------------------------------------------------')
